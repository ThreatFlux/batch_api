name: CI Test Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13]
        docker-stage: [builder, development, production]

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38  # v5.4.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: make install

    - name: Format code
      run: make format

    - name: Run linting
      run: make lint

    - name: Run type checking
      run: make type-check

    - name: Run tests with coverage
      run: |
        make test
        make coverage

    - name: Build Docker stage
      run: |
        docker build --target ${{ matrix.docker-stage }} \
          -t batch-api:${{ matrix.docker-stage }} .

    - name: Test Docker stage
      run: |
        if [ "${{ matrix.docker-stage }}" = "production" ]; then
          # Test production stage health check
          docker run -d --name test-container batch-api:${{ matrix.docker-stage }}
          sleep 5
          docker inspect --format='{{.State.Health.Status}}' test-container | grep -q healthy
        fi

    - name: Upload coverage reports
      uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574  # v5.4.0
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1  # v4.6.1
      with:
        name: test-results-py${{ matrix.python-version }}-${{ matrix.docker-stage }}
        path: |
          test-reports/**/*
          !test-reports/**/*.pyc
          !test-reports/**/__pycache__
          htmlcov/**/*
          !htmlcov/**/*.pyc
          !htmlcov/**/__pycache__
          .coverage
        retention-days: 30
        if-no-files-found: warn
        compression-level: 9

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Run Safety CLI to check for vulnerabilities
        uses: pyupio/safety-action@2591cf2f3e67ba68b923f4c92f0d36e281c65023  # v1.0.1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}
